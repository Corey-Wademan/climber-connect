{"version":3,"sources":["img/climb-logo.png","actions/types.js","actions/alert.js","utils/setAuthToken.js","actions/auth.js","Components/Layout/Navbar.js","Components/Layout/Landing.js","Components/Auth/Login.js","Components/Auth/Register.js","Components/Layout/Alert.js","actions/profile.js","img/spinner.gif","Components/Layout/Spinner.js","Components/dashboard/DashboardActions.js","Components/dashboard/Dashboard.js","Components/profile-forms/ProfileSelectors.js","Components/profile-forms/CreateProfile.js","Components/profile-forms/EditProfile.js","Components/profiles/ProfileItem.js","Components/profiles/Profiles.js","utils/formatDate.js","Components/profile/ProfileMain.js","Components/profile/ProfileAbout.js","Components/profile/Profile.js","Components/posts/PostItem.js","actions/post.js","Components/posts/PostForm.js","Components/posts/Posts.js","Components/post/CommentForm.js","Components/post/CommentItem.js","Components/post/Post.js","Components/routing/PrivateRoute.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_PROFILE","GET_PROFILE","GET_PROFILES","PROFILE_ERROR","DELETE_ACCOUNT","GET_POST","GET_POSTS","ADD_POST","DELETE_POST","POST_ERROR","UPDATE_LIKES","ADD_COMMENT","REMOVE_COMMENT","setAlert","msg","alertType","timeout","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuth","loading","authLinks","to","className","onClick","href","guestLinks","alt","src","logo","Landing","prototypes","PropTypes","bool","login","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","action","placeholder","required","minLength","register","password2","alert","propTypes","alerts","array","isRequired","length","map","getCurrentProfile","statusText","status","createProfile","history","edit","push","Spinner","spinner","style","width","margin","display","DashboardActions","_id","profile","user","deleteAccount","window","confirm","delete","useEffect","trim","split","states","grades","climbingTypes","withRouter","age","location","gender","preferred_belay_device","best_time","climbing_since","climbing_type","tradLead","sportLead","tradFollow","sportFollow","additional_info","twitter","facebook","instagram","youtube","displaySocialInputs","toggleSocialInputs","today","Date","dd","getDate","MM","getMonth","yyyy","getFullYear","disabled","climb","selected","find","indexOf","splice","updateClimbTypes","includes","grade","max","leads","follows","social","mm","checked","ProfileItem","avatar","toString","getProfiles","profiles","formatDate","date","Intl","DateTimeFormat","format","ProfileMain","member_since","rel","ProfileAbout","index","getProfileById","userId","match","params","PostItem","deletePost","addLike","removeLike","showActions","text","comments","likes","defaultProps","put","addPost","setText","autoComplete","cols","rows","class","getPosts","posts","addComment","postId","removeComment","commentId","comment","getPost","fontSize","Component","component","rest","render","props","initialState","alertsReducer","filter","getItem","authReducer","setItem","removeItem","profileReducer","postReducer","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","Register","Login","Profiles","Profile","Posts","Post","Dashboard","CreateProfile","EditProfile","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.156a3b11.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/climb-logo.bb628557.png\";","// Redux action types\n\n// Alerts\nexport const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\n\n// User Authentication\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\n// Continous User Auth to check if user is logged in\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\n\n// Login Functionality\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\n\n\n// Profile Functionality\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const DELETE_ACCOUNT = 'DELETE_ACCOUNT';\n\n// Posts \nexport const GET_POST = 'GET_POST';\nexport const GET_POSTS = 'GET_POSTS';\nexport const ADD_POST = 'ADD_POSTS';\nexport const DELETE_POST = 'DELETE_POST';\nexport const POST_ERROR = 'POST_ERROR';\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\n\n// Comments\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';","import { v4 as uuidv4 } from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from \"./types\";\n\nexport const setAlert = (msg, alertType, timeout = 3000) => dispatch => {\n    const id = uuidv4();\n    dispatch( {\n        type: SET_ALERT,\n        payload: { msg, alertType, id }\n    } );\n\n    setTimeout( () => dispatch( { type: REMOVE_ALERT, payload: id } ), timeout );\n}","import axios from 'axios'\n\nexport const setAuthToken = token => {\n   if (token) {\n      axios.defaults.headers.common['x-auth-token'] = token\n   } else {\n      delete axios.defaults.headers.common['x-auth-token']\n   }\n}","import axios from 'axios'\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_PROFILE} from './types'\nimport { setAlert } from './alert'\nimport { setAuthToken } from '../utils/setAuthToken'\n\n// Load User\nexport const loadUser = () => async dispatch => {\n    if (localStorage.token) {\n        setAuthToken(localStorage.token)\n    }\n\n    try {\n        const res = await axios.get('/api/auth')\n\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        })\n    } catch (error) {\n        dispatch({\n            type: AUTH_ERROR\n        }) \n    }\n}\n\n// Register User\nexport const register = ({ name, email, password }) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    \n\n    const body = JSON.stringify({ name, email, password })\n    \n    try {\n        const res = await axios.post('api/users', body, config)\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        })\n\n        dispatch(loadUser())\n    } catch (error) {\n        const errors = error.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger'))\n            );\n        }\n        dispatch({\n            type: REGISTER_FAIL\n        })\n    }\n}\n\n// Login User\nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    \n\n    const body = JSON.stringify({ email, password })\n    \n    try {\n        const res = await axios.post('api/auth', body, config)\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        })\n\n        dispatch(loadUser())\n    } catch (error) {\n        const errors = error.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger'))\n            );\n        }\n        dispatch({\n            type: LOGIN_FAIL\n        })\n    }\n}\n\n// Logout / Clear Profile Token\nexport const logout = () => dispatch => {\n    dispatch({type: CLEAR_PROFILE})\n    dispatch({type: LOGOUT})\n}","import React, { Fragment } from 'react';\nimport {Link} from 'react-router-dom';\nimport logo from '../../img/climb-logo.png'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth' \n \nconst Navbar = ({ auth: { isAuth, loading }, logout }) => {\n\n  const authLinks = (\n    <ul>\n      <li>\n        <Link to=\"/profiles\">\n          Climbers\n        </Link>\n      </li>\n      <li>\n        <Link to=\"/posts\">\n          Posts\n        </Link>\n      </li>\n      <li>\n        <Link to=\"/dashboard\">\n          <i className='fas fa-user' />{' '}\n          <span className='hide-sm'>Dashboard</span>\n        </Link>\n      </li>\n      <li>\n        <Link to='/' onClick={logout} href=\"#!\">\n          <i className='fas fa-sign-out-alt' />{' '}\n          <span className='hide-sm'>Logout</span>\n        </Link>\n      </li>\n    </ul>\n  )\n  \n  const guestLinks = (\n    <ul>\n      <li>\n        <Link to=\"/profiles\">\n          Climbers\n        </Link>\n      </li>\n      <li>\n        <Link to=\"/posts\">\n          Posts\n        </Link>\n      </li>\n      <li>\n          <Link to=\"/register\">Register</Link>\n      </li>\n      <li>\n          <Link to=\"/login\">Login</Link>\n      </li>\n    </ul>\n  )\n\n    return (\n      <nav className=\"navbar\">\n        <h1>\n          <Link to=\"/\">\n              <img alt='logo' className='logo' src={logo}/> Climbing Connecter\n          </Link>\n          </h1>\n        {!loading &&\n          (<Fragment>{isAuth ? authLinks : guestLinks}</Fragment>)}\n      </nav>\n    )\n}\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n}\nconst mapStateToProps = state => ({\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, {logout})(Navbar)\n","import React from 'react'\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n \nconst Landing = ({ isAuth }) => {\n  \n  if (isAuth) {\n   return <Redirect to=\"/dashboard\" />\n  }\n\n    return (\n    <section className=\"landing\">\n      <div className=\"dark-overlay\">\n        <div className=\"landing-inner\">\n          <h1 className=\"x-large\">Climbing Connecter</h1>\n          <p className=\"lead\">\n            Create a climbing profile, find climbing partners, add your climbing stats and recent climbs, share posts, message other climbers, spread the stoke. \n          </p>\n          <div className=\"buttons\">\n            <Link to=\"/register\" className=\"btn btn-primary\">Sign Up</Link>\n            <Link to=\"/login\" className=\"btn btn-light\">Login</Link>\n          </div>\n        </div>\n      </div>\n    </section>\n    )\n}\n\nLanding.prototypes = {\n  isAuth: PropTypes.bool,\n}\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps)(Landing)\n","import React, {useState} from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth'\n\nconst Login = ({login, isAuth}) => {\n    const [formData, setFormData] = useState( {\n        email: '',\n        password: ''\n    } );\n\n    const { email, password } = formData;\n\n    // Variable handler that takes name att.(e.target.name) from input, sets its value as the key for the output\n    const onChange = e => setFormData( { ...formData, [e.target.name]: e.target.value } );\n    \n    const onSubmit = async e => {\n        e.preventDefault();\n        login(email, password);\n    }\n\n    // Redirect if loggin in \n    if (isAuth) {\n        return <Redirect to=\"/dashboard\" />\n    }\n\n    return (\n        <>\n           <h1 className=\"large text-primary\">Sign In</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign Into Your Account</p>\n      <form className=\"form\" action=\"create-profile.html\" onSubmit={e => onSubmit(e)}>\n            <div className=\"form-group\">\n                <input\n                    type=\"email\"\n                    placeholder=\"Email Address\"\n                    name=\"email\"\n                    value={email}\n                    onChange={e => onChange( e )}\n                    required\n                />\n            </div>\n            <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    minLength=\"6\"\n                    value={password}\n                    onChange={e => onChange( e )}\n                    required\n                />\n            </div>\n            <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n      </form>\n      <p className=\"my-1\">\n        Don't have an account? <Link to=\"/register\">Sign Up</Link>\n      </p> \n        </>\n    )\n}\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    isAuth: PropTypes.bool,\n}\n\nconst mapStateToProps = state => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login})(Login);\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types'\n\n\nconst Register = ({setAlert, register, isAuth}) => {\n    const [formData, setFormData] = useState( {\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    } );\n\n    const { name, email, password, password2 } = formData;\n\n    // Variable handler that takes name att.(e.target.name) from input, sets its value as the key for the output\n    const onChange = e => setFormData( { ...formData, [e.target.name]: e.target.value } );\n    \n    const onSubmit = async e => {\n        e.preventDefault();\n        if ( password !== password2 ) {\n            setAlert('Passwords do not match', 'danger')\n        } else {\n            register({name, email, password})\n        }\n    }\n\n    // Redirect to dashboard if user registers\n    if (isAuth) {\n        return (\n            <Redirect to=\"/dashboard\" />\n        )\n    }\n\n    return (\n        <>\n           <h1 className=\"large text-primary\">Sign Up</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\n      <form className=\"form\" action=\"create-profile.html\" onSubmit={e => onSubmit(e)}>\n            <div className=\"form-group\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    value={name}\n                    onChange={e => onChange(e)}\n                />\n            </div>\n            <div className=\"form-group\">\n                <input\n                    type=\"email\"\n                    placeholder=\"Email Address\"\n                    name=\"email\"\n                    value={email}\n                    onChange={e => onChange( e )}\n                    \n                />\n            </div>\n            <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    minLength=\"6\"\n                    value={password}\n                    onChange={e => onChange( e )}\n                    \n                />\n            </div>\n            <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    name=\"password2\"\n                    minLength=\"6\"\n                    value={password2}\n                    onChange={e => onChange( e )}\n                    \n                />\n            </div>\n            <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n      </form>\n      <p className=\"my-1\">\n        Already have an account? <Link to=\"/login\">Sign In</Link>\n      </p> \n        </>\n    )\n}\n\nRegister.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    isAuth: PropTypes.bool,\n}\n\nconst mapStateToProps = state => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {setAlert, register})( Register );\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\n\nconst Alert = ( { alerts } ) => {\n    return (\n        alerts !== null &&\n        alerts.length > 0 &&\n        alerts.map( alert => (\n            <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n                {alert.msg}\n            </div>\n        ))\n    )\n    \n};\n\nalert.propTypes = {\n    alerts: PropTypes.array.isRequired,\n}\n\nconst mapStatetoProps = state => ( {\n    alerts: state.alert\n})\n\nexport default connect(mapStatetoProps)(Alert)\n","import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { CLEAR_PROFILE, DELETE_ACCOUNT, GET_PROFILE, GET_PROFILES, PROFILE_ERROR } from \"./types\";\n\n//Get current users profile\nexport const getCurrentProfile = () => async dispatch => {\n   try {\n      const res = await axios.get('/api/profile/me');\n\n      dispatch({\n         type: GET_PROFILE,\n         payload: res.data\n      });\n   } catch (error) {\n      dispatch({\n         type: PROFILE_ERROR,\n         payload: {\n            msg: error.response.statusText, status: error.response.status\n         }\n      })\n   }\n}\n\n// Get all profiles\nexport const getProfiles = () => async dispatch => {\n   dispatch({ type: CLEAR_PROFILE });\n\n   try {\n      const res = await axios.get('/api/profile/');\n\n      dispatch({\n         type: GET_PROFILES,\n         payload: res.data\n      });\n   } catch (error) {\n      dispatch({\n         type: PROFILE_ERROR,\n         payload: {\n            msg: error.response.statusText, status: error.response.status\n         }\n      })\n   }\n} \n\n// Get profile by ID\nexport const getProfileById = userId => async dispatch => {\n   try {\n      const res = await axios.get(`/api/profile/user/${userId}`);\n\n      dispatch({\n         type: GET_PROFILE,\n         payload: res.data\n      });\n   } catch (error) {\n      dispatch({\n         type: PROFILE_ERROR,\n         payload: {\n            msg: error.response.statusText, status: error.response.status\n         }\n      })\n   }\n}\n\n// Create or update profile\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n   try {\n      const config = {\n         headers: {\n            'Content-Type': 'application/json'\n         }\n      }\n\n      const res = await axios.post('/api/profile', formData, config);\n      dispatch({\n         type: GET_PROFILE,\n         payload: res.data\n      });\n      dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n      if (!edit) {\n         history.push('/dashboard')\n      }\n      \n   } catch (error) {\n      const errors = error.response.data.errors;\n\n      if (errors) {\n         errors.forEach(error => dispatch(setAlert(error.msg, 'danger'))\n         );\n      };\n\n      dispatch({\n         type: PROFILE_ERROR,\n         payload: {\n            msg: error.response.statusText, status: error.response.status\n         }\n      })\n   }\n}\n\n// Delete account & profile\nexport const deleteAccount = () => async dispatch => {\n   if (window.confirm('Are you sure you would like to delete your account?')) {\n      try {\n         await axios.delete('api/profile');\n         \n         dispatch({ type: CLEAR_PROFILE });\n         dispatch({ type: DELETE_ACCOUNT });\n         dispatch(setAlert('Your account has been permanantly deleted'))\n      } catch (error) {\n         dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n         });\n      }\n   }\n}","export default __webpack_public_path__ + \"static/media/spinner.438eee38.gif\";","import React, {Fragment} from 'react'\nimport spinner from '../../img/spinner.gif';\n\nexport const Spinner = () => (\n   <Fragment>\n      <img\n         src={spinner}\n         style={{ width: '200px', margin: 'auto', display: 'block' }}\n         alt='Loading'\n      />\n   </Fragment>\n)\n\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\n\nconst DashboardActions = ({profile: {user: {_id}}}) => {\n   return (\n      <div className=\"dash-buttons\">\n         <Link to={`/profile/${_id}`} className=\"btn btn-light\">\n            <i className=\"fas fa-user-circle text-primary\"></i> View Profile\n         </Link>\n         <Link to=\"edit-profile\" className=\"btn btn-light\">\n            <i className=\"fas fa-user-circle text-primary\"></i> Edit Profile\n         </Link>\n      </div>\n   )\n}\n\nDashboardActions.propTypes = {\n   profile: PropTypes.object.isRequired,\n}\n\nexport default DashboardActions\n","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { deleteAccount, getCurrentProfile } from '../../actions/profile';\nimport {Spinner} from '../Layout/Spinner';\nimport DashboardActions from './DashboardActions';\n\n\nconst Dashboard = ({ getCurrentProfile, deleteAccount, auth: { user }, profile: { profile, loading } }) => {\n\n   useEffect(() => {\n      getCurrentProfile();\n   }, [getCurrentProfile]); \n\n   return loading && profile === null ? <Spinner /> :\n      <Fragment>\n         <h1 className='large text-primary'>Dashboard</h1>\n         <p className='lead'>\n            <i className='fas fa-user'> Welcome {user && user.name.trim().split(' ')[0]}</i>\n         </p>\n         {profile !== null ?\n            <Fragment>\n               <DashboardActions \n                  profile={profile} />\n               <div className=\"my-2\">\n                  <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\n                     <i className=\"fas fa-user-times\"></i> Delete Account\n                  </button>\n               </div>\n            </Fragment> :\n            <Fragment>\n               <p>You have not yet created a profile, join the community and add some info!</p>\n               <Link to=\"/create-profile\" className='btn btn-primary my-1'>Create Profile</Link>\n            </Fragment>}\n      </Fragment>;\n};\n\nDashboard.propTypes = {\n   getCurrentProfile: PropTypes.func.isRequired,\n   auth: PropTypes.object.isRequired,\n   profile: PropTypes.object.isRequired,\n   deleteAccount: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n   auth: state.auth,\n   profile: state.profile\n})\n\nexport default connect(mapStateToProps, {getCurrentProfile, deleteAccount})(Dashboard)\n","export const states = [\n   \"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"District of Columbia\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Puerto Rico\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"\n];\n\nexport const grades = [\"5.0\", \"5.1\", \"5.2\", \"5.3\", \"5.4\", \"5.5\", \"5.6\", \"5.7\", \"5.8\", \"5.9\", \"5.10a\", \"5.10b\", \"5.10c\", \"5.10d\", \"5.11a\", \"5.11b\", \"5.11c\", \"5.11d\", \"5.12a\", \"5.12b\", \"5.12c\", \"5.12d\", \"5.13a\", \"5.13b\", \"5.13c\", \"5.13d\", \"5.14a\", \"5.14b\", \"5.14c\", \"5.14d\", \"5.15a\", \"5.15b\", \"5.15c\", \"5.15d\",\n];\n\nexport const climbingTypes = [\n   { name: \"Trad\", id: 1 },\n   { name: \"Sport\", id: 2 },\n   { name: \"Boulder\", id: 3 }\n];\n\n","import React, { Fragment, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types' \nimport { connect } from 'react-redux';\nimport { states, grades, climbingTypes } from './ProfileSelectors';\nimport { createProfile } from '../../actions/profile';\n\nconst CreateProfile = ({createProfile, history}) => {\n   const [formData, setFormData] = useState({\n      age: '',\n      location: '',\n      gender: '',\n      preferred_belay_device: '',\n      best_time: '',\n      climbing_since: '',\n      climbing_type: [], \n      tradLead: '',\n      sportLead: '',\n      tradFollow: '',\n      sportFollow: '',\n      additional_info: '',\n      twitter: '',\n      facebook: '',\n      instagram: '',\n      youtube: ''\n   });\n   const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n   const { age, location, gender, preferred_belay_device, best_time, climbing_type, climbing_since, sportLead, tradLead, sportFollow, tradFollow, additional_info, twitter, facebook, instagram, youtube } = formData;\n\n   // Max Date Logic For Calendar Input\n   // Fix format\n   let today = new Date(); \n   let dd = today.getDate();\n   let MM = today.getMonth()+1; // January = 0\n   let yyyy = today.getFullYear();\n   if(dd<10){\n         dd='0'+dd\n      } \n      if(MM<10){\n         MM='0'+MM\n      } \n\n   today = yyyy+'-'+MM+'-'+dd;\n\n\n   // Currently takes in the last of selected values\n   // Change to take in all values\n   const updateClimbTypes = e => {\n      let selected = climbing_type\n      let find = selected.indexOf(e)\n\n      if (find > -1) {\n         selected.splice(find, 1)\n      } else {\n         selected.push(e)\n      }\n      setFormData({\n         ...formData,\n         climbing_type: selected\n      })\n   };\n\n   const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n   const onSubmit = e => {\n      e.preventDefault();\n      createProfile(formData, history)\n   }\n\n   return (\n      <Fragment>\n         <h1 className=\"large text-primary\">\n        Create Your Profile\n      </h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's add some info to your climbing profile\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n         \n        <div className=\"form-group\">\n               <select\n                  required\n                  name=\"location\"\n                  value={location}\n                  onChange={e => onChange(e)}>\n                  <option\n                     value=\"\"\n                     disabled>\n                     *Location\n                  </option>\n            {states.map(state => (\n               <option\n                  key={state}\n                  value={state}>\n                  {state}\n               </option>\n            ))}\n         </select>\n         <small className=\"form-text\">* Your location to find other climbers near you </small>\n        </div>\n        \n        <div className=\"form-group\">\n         <input type=\"text\" placeholder=\"*Age\" name=\"age\" value={age} onChange={e => onChange(e)}/>\n         <small className=\"form-text\">* Helps for identifying & matching similarly aged users</small>\n        </div>\n            \n         <div className='form-group'>\n           <h1> Climbing Types</h1>\n            {climbingTypes.map(climb => (\n               <label key={climb.id}>\n               <input\n                  type=\"checkbox\"\n                  name={climb.name}\n                  value={climb.name}\n                  onChange={() => updateClimbTypes(climb.name)}\n                  selected={climbing_type.includes(climb.id)}\n                  /> {climb.name}\n                  <br></br>\n               </label>\n               \n            ))}\n            <small className=\"form-text\">Select your types of climbing</small>\n         </div>\n            \n         <div className=\"form-group\">\n            <h1>Leads</h1>\n               <small className=\"form-text\">Trad Lead</small>\n               <select\n                  name=\"tradLead\"\n                  value={tradLead}\n                  onChange={e => onChange(e)}>\n               {grades.map(grade => (\n                  <option key={grade} value={grade}>{grade}</option>\n               ))}\n               </select>\n               <br></br>\n               <small className=\"form-text\">Sport Lead</small>\n               <select\n                  name=\"sportLead\"\n                  value={sportLead}\n                  onChange={e => onChange(e)}>\n               {grades.map(grade => (\n                  <option key={grade} value={grade}>{grade}</option>\n               ))}\n               </select>\n               <small className=\"form-text\">Select the grades you can currently lead</small>\n        </div>\n        \n        <div className=\"form-group\">\n            <h1>Follows</h1>\n               <small className=\"form-text\">Trad Follow</small>\n               <select\n                  name=\"tradFollow\"\n                  value={tradFollow}\n                  onChange={e => onChange(e)}>\n               {grades.map(grade => (\n                  <option key={grade} value={grade}>{grade}</option>\n               ))}\n               </select>\n               <br></br>\n               <small className=\"form-text\">Sport Follow</small>\n               <select\n                  name=\"sportFollow\"\n                  value={sportFollow}\n                  onChange={e => onChange(e)}>\n               {grades.map(grade => (\n                  <option key={grade} value={grade}>{grade}</option>\n               ))}\n            </select>\n            <small className=\"form-text\">Select the grades you currently follow / clean</small>\n         </div>\n               \n        <div className=\"form-group\">\n         <select type=\"text\" name=\"preferred_belay_device\" value={preferred_belay_device} onChange={e => onChange(e)}>\n            <option value=\"\" disabled>Belay Device</option>\n            <option value='ATC'>ATC</option>\n            <option value='Assisted Braking'>Assisted Braking</option>\n            <option value='Figure Eight'>Figure Eight</option>\n         </select>\n         <small className=\"form-text\">Select your preferred belay device</small>\n        </div>\n\n        <div className=\"form-group\">\n          <textarea placeholder=\"A short bio of yourself\" name=\"additional_info\" value={additional_info} onChange={e => onChange(e)}></textarea>\n          <small className=\"form-text\">Tell us a little about yourself and what else you like to do</small>\n        </div>\n        \n        <div className=\"form-group\">\n         <input type=\"text\" placeholder=\"Best Availabilty to Climb\" name=\"best_time\" value={best_time} onChange={e => onChange(e)}/>\n         <small className=\"form-text\">ie. (Weekends / Wednesdays after 5pm)</small>\n        </div>\n        \n        <div className=\"form-group\">\n         <select required type=\"text\" placeholder=\"Gender\" name=\"gender\" value={gender} onChange={e => onChange(e)}>\n            <option value=\"\" disabled>*Gender</option>\n            <option value='Male'>Male</option>\n            <option value='Female'>Female</option>\n         </select>\n         <small className=\"form-text\">* Helps for filtering potential climbing partners</small>\n        </div>\n        \n        <div className=\"form-group\">\n         <label>Climbing Since:</label>\n         <input type=\"date\" id=\"climbing_since\" name=\"climbing_since\" max={today} value={climbing_since} onChange={e => onChange(e)}/>\n        </div>\n\n        <div className=\"my-2\">\n          <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n            </div>\n            \n         {displaySocialInputs &&\n         <Fragment>\n            <div className=\"form-group social-input\">\n               <i className=\"fab fa-twitter fa-2x\"></i>\n               <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n               <i className=\"fab fa-facebook fa-2x\"></i>\n               <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n               <i className=\"fab fa-youtube fa-2x\"></i>\n               <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n               <i className=\"fab fa-instagram fa-2x\"></i>\n               <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)}/>\n            </div>\n         </Fragment>}\n\n        \n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n      </form>\n      </Fragment>\n   )\n}\n\nCreateProfile.propTypes = {\n   createProfile: PropTypes.func.isRequired,\n}\n\nexport default connect(null, {createProfile})(withRouter(CreateProfile))\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { states, grades, climbingTypes } from './ProfileSelectors';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst EditProfile = ({profile: {profile, loading}, createProfile, getCurrentProfile, history}) => {\n   const [formData, setFormData] = useState({\n      age: '',\n      location: '',\n      gender: '',\n      preferred_belay_device: '',\n      best_time: '',\n      climbing_since: '',\n      climbing_type: [],\n      tradLead: '',\n      sportLead: '',\n      tradFollow: '',\n      sportFollow: '',\n      additional_info: '',\n      twitter: '',\n      facebook: '',\n      instagram: '',\n      youtube: ''\n   });\n   const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n   useEffect(() => {\n      getCurrentProfile();\n\n      setFormData({\n         age: loading || !profile.age ? '' : profile.age,\n         location: loading || !profile.location ? '' : profile.location,\n         gender: loading || !profile.gender ? '' : profile.gender,\n         preferred_belay_device: loading || !profile.preferred_belay_device ? '' : profile.preferred_belay_device,\n         best_time: loading || !profile.best_time ? '' : profile.best_time,\n         climbing_since: loading || !profile.climbing_since ? '' : profile.climbing_since,\n         climbing_type: loading || !profile.climbing_type ? '' : profile.climbing_type,\n         tradLead: loading || !profile.leads.tradLead ? '' : profile.leads.tradLead,\n         sportLead: loading || !profile.leads.sportLead ? '' : profile.leads.sportLead,\n         tradFollow: loading || !profile.follows.tradFollow ? '' : profile.follows.tradFollow,\n         sportFollow: loading || !profile.follows.sportFollow ? '' : profile.follows.sportFollow,\n         additional_info: loading || !profile.additional_info ? '' : profile.additional_info,\n         twitter: loading || !profile.social ? '' : profile.social.twitter,\n         facebook: loading || !profile.social ? '' : profile.social.facebook,\n         instagram: loading || !profile.social ? '' : profile.social.instagram,\n         youtube: loading || !profile.social ? '' : profile.social.youtube,\n\n      })\n\n   }, [loading, getCurrentProfile]);\n\n   const { age, location, gender, preferred_belay_device, best_time, climbing_type, climbing_since, sportLead, tradLead, sportFollow, tradFollow, additional_info, twitter, facebook, instagram, youtube } = formData;\n\n   // Max Date Logic For Calendar Input\n   let today = new Date();\n   let dd = today.getDate();\n   let mm = today.getMonth()+1; // January = 0\n   let yyyy = today.getFullYear();\n   if(dd<10){\n         dd='0'+dd\n      }  \n      if(mm<10){\n         mm='0'+mm\n      } \n   today = yyyy + '-' + mm + '-' + dd;\n\n   \n   const updateClimbTypes = e => {\n      let selected = climbing_type\n      let find = selected.indexOf(e)\n      if (find > -1) {\n         selected.splice(find, 1)\n      } else {\n         selected.push(e)\n      }\n      setFormData({\n         ...formData,\n         climbing_type: selected\n      })\n   };\n\n   const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n   const onSubmit = e => {\n      e.preventDefault();\n      createProfile(formData, history, true)\n   }\n\n   return (\n      <Fragment>\n         <h1 className=\"large text-primary\">\n        Edit Profile\n      </h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Climbing harder? Update your profile\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n         \n        <div className=\"form-group\">\n               <select\n                  required\n                  name=\"location\"\n                  value={location}\n                  onChange={e => onChange(e)}>\n                  <option\n                     value=\"\"\n                     disabled>\n                     *Location\n                  </option>\n            {states.map(state => (\n               <option\n                  key={state}\n                  value={state}>\n                  {state}\n               </option>\n            ))}\n         </select>\n         <small className=\"form-text\">* Your location to find other climbers near you </small>\n        </div>\n        \n        <div className=\"form-group\">\n         <input type=\"text\" placeholder=\"*Age\" name='age' value={age} onChange={e => onChange(e)}/>\n         <small className=\"form-text\">* Helps for identifying & matching similarly aged users</small>\n        </div>\n            \n         <div className='form-group'>\n           <h1> Climbing Types</h1>\n            {climbingTypes.map(climb => (\n               <label key={climb.id}>\n               <input\n                  type=\"checkbox\"\n                  name={climb.name}\n                  checked={climbing_type.includes(climb.name)}\n                  value={climb.name}\n                  onChange={() => updateClimbTypes(climb.name)}\n                  />\n                  {climb.name}\n                  <br></br>\n               </label>\n               \n            ))}\n            <small className=\"form-text\">Select your types of climbing</small>\n         </div>\n            \n         <div className=\"form-group\">\n            <h1>Leads</h1>\n               <small className=\"form-text\">Trad Lead</small>\n               <select\n                  name=\"tradLead\"\n                  value={tradLead}\n                  onChange={e => onChange(e)}>\n               {grades.map(grade => (\n                  <option key={grade} value={grade}>{grade}</option>\n               ))}\n               </select>\n               <br></br>\n               <small className=\"form-text\">Sport Lead</small>\n               <select\n                  name=\"sportLead\"\n                  value={sportLead}\n                  onChange={e => onChange(e)}>\n               {grades.map(grade => (\n                  <option key={grade} value={grade}>{grade}</option>\n               ))}\n               </select>\n               <small className=\"form-text\">Select the grades you can currently lead</small>\n        </div>\n        \n        <div className=\"form-group\">\n            <h1>Follows</h1>\n               <small className=\"form-text\">Trad Follow</small>\n               <select\n                  name=\"tradFollow\"\n                  value={tradFollow}\n                  onChange={e => onChange(e)}>\n               {grades.map(grade => (\n                  <option key={grade} value={grade}>{grade}</option>\n               ))}\n               </select>\n               <br></br>\n               <small className=\"form-text\">Sport Follow</small>\n               <select\n                  name=\"sportFollow\"\n                  value={sportFollow}\n                  onChange={e => onChange(e)}>\n               {grades.map(grade => (\n                  <option key={grade} value={grade}>{grade}</option>\n               ))}\n            </select>\n            <small className=\"form-text\">Select the grades you currently follow / clean</small>\n         </div>\n               \n        <div className=\"form-group\">\n         <select type=\"text\" name=\"preferred_belay_device\" value={preferred_belay_device} onChange={e => onChange(e)}>\n            <option value=\"\" disabled>Belay Device</option>\n            <option value='ATC'>ATC</option>\n            <option value='Assisted Braking'>Assisted Braking</option>\n            <option value='Figure Eight'>Figure Eight</option>\n         </select>\n         <small className=\"form-text\">Select your preferred belay device</small>\n        </div>\n\n        <div className=\"form-group\">\n          <textarea placeholder=\"A short bio of yourself\" name=\"additional_info\" value={additional_info} onChange={e => onChange(e)}></textarea>\n          <small className=\"form-text\">Tell us a little about yourself and what else you like to do</small>\n        </div>\n        \n        <div className=\"form-group\">\n         <input type=\"text\" placeholder=\"Best Availabilty to Climb\" name=\"best_time\" value={best_time} onChange={e => onChange(e)}/>\n         <small className=\"form-text\">Your best availabilty to climb ie. (Weekends / Wednesdays after 5pm)</small>\n        </div>\n        \n        <div className=\"form-group\">\n         <select required type=\"text\" placeholder=\"Gender\" name=\"gender\" value={gender} onChange={e => onChange(e)}>\n            <option value=\"\" disabled>*Gender</option>\n            <option value='Male'>Male</option>\n            <option value='Female'>Female</option>\n         </select>\n         <small className=\"form-text\">* Helps for filtering potential climbing partners</small>\n        </div>\n        \n        <div className=\"form-group\">\n         <label>Climbing Since:</label>\n         <input type=\"date\" id=\"climbing_since\" name=\"climbing_since\" max={today} value={climbing_since} onChange={e => onChange(e)}/>\n        </div>\n\n        <div className=\"my-2\">\n          <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n            </div>\n            \n         {displaySocialInputs &&\n         <Fragment>\n            <div className=\"form-group social-input\">\n               <i className=\"fab fa-twitter fa-2x\"></i>\n               <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n               <i className=\"fab fa-facebook fa-2x\"></i>\n               <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n               <i className=\"fab fa-youtube fa-2x\"></i>\n               <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n               <i className=\"fab fa-instagram fa-2x\"></i>\n               <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)}/>\n            </div>\n         </Fragment>}\n\n        \n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n      </form>\n      </Fragment>\n   )\n}\n\nconst mapStateToProps = state => ({\n   profile: state.profile\n})\n\nEditProfile.propTypes = {\n   createProfile: PropTypes.func.isRequired,\n   getCurrentProfile: PropTypes.func.isRequired,\n   profile: PropTypes.object.isRequired,\n}\n\nexport default connect(\n   mapStateToProps,\n   { createProfile, getCurrentProfile })\n   (withRouter(EditProfile))\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nconst ProfileItem = ({\n   profile: {\n      user: { _id, name, avatar },\n      age,\n      location,\n      climbing_type,\n      best_time,\n      leads,\n      gender,\n      preferred_belay_device,\n      additional_info\n}}) => {\n   return ( \n      <div className='profile list-item'>\n         <img src={avatar} alt=\"\" className='profiles-img' />\n            <div className='profile-col'>\n               <h2>{name}</h2>\n               <p>{location}</p>\n               <p>{age}</p>\n               <p>{gender}</p>\n               <Link to={`/profile/${_id}`} className='profiles-btn btn-primary'>View Profile</Link>\n            </div>\n            <div className='profile-col'>\n               <p>{climbing_type && <><b>Climbs:</b> {climbing_type.toString().split()}</>}</p>\n               <p>{leads && leads.tradLead ? <> <b>Trad Leads:</b> {leads.tradLead} </>: <> </>}</p>\n               <p>{leads && leads.sportLead ? <> <b>Sport Leads:</b> {leads.sportLead} </> : <> </>}</p>\n               <p>{preferred_belay_device && <> <b>Belay Device:</b> {preferred_belay_device} </>}</p>\n               <p>{best_time && <> <b>Best Time To Climb:</b> {best_time} </>}</p>\n               <p>{additional_info && <> <b>About Me:</b> {additional_info} </>}</p>\n            </div>\n      </div>\n   )\n}\n\nProfileItem.propTypes = {\n   profile: PropTypes.object.isRequired,\n}\n\nexport default ProfileItem\n","import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { Spinner } from '../Layout/Spinner';\nimport { getProfiles } from '../../actions/profile';\nimport ProfileItem from './ProfileItem'\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n   useEffect(() => {\n      getProfiles();\n   }, [getProfiles]);\n   \n   return (\n      <Fragment>\n         {loading ? <Spinner /> :\n            <Fragment>\n               <h1 className='large text-primary'>Climbers</h1>\n               <p className='lead'>\n                  <i className='fas fa-hiking'> Find and link up with other climbers in your area</i>\n               </p>\n               <div className='profiles'>\n                  {profiles.length > 0 ? (\n                     profiles.map(profile => (\n                        <ProfileItem\n                           key={profile._id}\n                           profile={profile}\n                        />\n                     ))\n                  ) : <h4>No profiles found </h4>}\n               </div>\n            </Fragment>}\n      </Fragment>\n   );\n};\n\nProfiles.propTypes = {\n   getProfiles: PropTypes.func.isRequired,\n   profile: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n   profile: state.profile\n})\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\n","function formatDate(date) {\n   return new Intl.DateTimeFormat().format(new Date(date));\n }\n \n export default formatDate;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport formatDate from '../../utils/formatDate'\n\nconst ProfileMain = ({ profile: {\n   age,\n   location,\n   gender,\n   social,\n   member_since,\n   user: {name, avatar}\n}}) => {\n   return (\n      <div className=\"profile-main bg-light p-2\">\n          <img\n            className=\"round-img my-1\"\n            src={avatar}\n            alt=\"\"\n          />\n         <h1 className=\"large\">{name}</h1>\n         <p>{age}</p>\n         <p>{gender}</p>\n         <p>{location}</p>\n         <p>Member Since: {formatDate(member_since)}</p>\n         <div className=\"icons my-1\">\n            {social && social.twitter && (\n               <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <i className=\"fab tran fa-twitter fa-2x\"></i>\n               </a>\n            )}\n            {social && social.facebook && (\n               <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <i className=\"fab tran fa-facebook fa-2x\"></i>\n               </a>\n            )}\n            {social && social.youtube && (\n               <a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <i className=\"fab tran fa-youtube fa-2x\"></i>\n               </a>\n            )}\n            {social && social.instagram && (\n               <a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <i className=\"fab tran fa-instagram fa-2x\"></i>\n               </a>\n            )}\n         </div>\n      </div>\n   )\n}\n\nProfileMain.propTypes = {\n   profile: PropTypes.object.isRequired,\n}\n\nexport default ProfileMain\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Fragment } from 'react'\nimport formatDate from '../../utils/formatDate'\n\nconst ProfileAbout = ({ profile: {\n   climbing_type,\n   preferred_belay_device,\n   leads,\n   follows,\n   additional_info,\n   best_time,\n   climbing_since,\n   user: {name}\n} }) => {\n   \n   return (\n      <div className=\"profile-about bg-light p-2\"> \n         <h2 className=\"text-primary text-center\">Climbing Profile</h2>\n         <p>{climbing_since && (<span>Climbing Since: {formatDate(climbing_since)}</span>)}</p>\n         <div className='climbing-type'>\n            <b>Climbs:</b> \n            <div className='col'>\n               {climbing_type.map((climb, index) => (\n                  <div key={index} className='p'>\n                     <i className='fas fa-check' /> {climb}\n                  </div>\n               ))}\n            </div>\n            {leads && (\n            <Fragment>\n               <div className='col'>\n                  <div className='row'>\n                     <b>Trad Lead: </b><span>{leads.tradLead}</span>\n                  </div>\n                  <div className='row'>\n                     <b>Sport Lead: </b><span>{leads.sportLead}</span>\n                  </div>\n               </div>\n            </Fragment>\n            )}\n\n            {follows && (\n            <Fragment>\n               <div className='col'>\n                  <div className='row'>\n                     <b>Trad Follow: </b><span>{follows.tradFollow}</span>\n                  </div>\n                  <div className='row'>\n                     <b>Sport Follow: </b><span> {follows.sportFollow}</span>\n                  </div>\n               </div>\n            </Fragment>\n            )}  \n         </div>\n\n            {preferred_belay_device && (\n               <Fragment>\n                  <div>\n                     <b>Belaying Device:</b> {preferred_belay_device}\n                  </div>\n               </Fragment>\n            )}  \n\n         <div className=\"line\"></div>\n         <div>\n            {additional_info && (\n               <Fragment>\n                  <h2 className=\"text-primary\">About {name.trim().split(' ')[0]}</h2>\n                  <p>\n                     {additional_info}\n                  </p>\n                  <div className='about-climb'>\n                     {best_time && (\n                        <p>\n                           <b>Best Time To Climb:</b> {best_time}\n                        </p>)}\n                  </div>\n               </Fragment>\n            )}\n         </div>\n         \n      </div>\n   )\n}\n\nProfileAbout.propTypes = {\n   profile: PropTypes.object.isRequired,\n}\n\nexport default ProfileAbout\n","import React, {Fragment, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport { Spinner } from '../Layout/Spinner'\nimport { getProfileById } from '../../actions/profile'\nimport ProfileTop from './ProfileMain';\nimport ProfileMain from './ProfileAbout'\n\nconst Profile = ({\n   getProfileById,\n   profile: { profile, loading },\n   auth,\n   match\n}) => {\n   useEffect(() => {\n      getProfileById(match.params.id);\n   }, [getProfileById, match.params.id]);\n\n   return (\n      <Fragment>\n         {profile === null || loading ? (<Spinner />) :\n            (<Fragment>\n               <Link to='/profiles' className='btn btn-dark'>\n                  Back To Profiles\n               </Link>\n               {auth.isAuth && auth.loading === false && auth.user._id === profile.user._id &&\n                  (<Link to='/edit-profile' className='btn btn-dark'>Edit Profile</Link>)}\n               <div className=\"profile-header my-1\">\n                  <ProfileTop profile={profile} />\n                  <ProfileMain profile={profile} />\n               </div>\n            </Fragment>)}\n      </Fragment>\n   );\n};\n\nProfile.propTypes = {\n   getProfileById: PropTypes.func.isRequired,\n   profile: PropTypes.object.isRequired,\n   auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n   profile: state.profile,\n   auth: state.auth\n})\n\nexport default connect(mapStateToProps, {getProfileById}) (Profile)\n","import React, {Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport Moment from 'react-moment'\nimport { connect } from 'react-redux'\nimport { addLike, removeLike, deletePost} from '../../actions/post'\n\nconst PostItem = ({\n\tdeletePost,\n\tauth, \n\taddLike, \n\tremoveLike, \n\tshowActions,\n\tpost: { _id, text, name, avatar, user, date, comments, likes}}) => {\n\t\t\n\treturn (\n\t\t<div className=\"posts\">\n        <div className=\"post bg-dark list-item my-1\">\n          <div>\n            <Link to={`/profile/${user}`}>\n              <img\n                className=\"post-img\"\n                src={avatar}\n                alt=\"\"\n              />\n              <h4>{name}</h4>\n            </Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='post-details'>\n\t\t\t\t\t\t\t<div className='post-text'>\n\t\t\t\t\t\t\t\t<p className=\"my-1\">\n\t\t\t\t\t\t\t\t\t{text}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p className=\"post-date\">\n\t\t\t\t\t\t\t\t\t\tPosted on <Moment format='MM/DD/YYYY'>{date}</Moment>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='post-btns'>\n\t\t\t\t\t\t\t\t{showActions && \n\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t<button onClick={e => addLike(_id)} type=\"button\" className=\"btn btn-light\">\n\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-thumbs-up\"></i>\n\t\t\t\t\t\t\t\t\t\t{likes.length > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t<span> {likes.length}</span>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<button onClick={e => removeLike(_id)} type=\"button\" className=\"btn btn-light\">\n\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-thumbs-down\"></i>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<Link to={`/posts/${_id}`} className=\"btn btn-primary\">\n\t\t\t\t\t\t\t\t\t\tDiscussion \n\t\t\t\t\t\t\t\t\t\t{comments.length > 0 && (\n\t\t\t\t\t\t\t\t\t\t<span className='comment-count'>{comments.length}</span>\n\t\t\t\t\t\t\t\t\t)} \n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t{!auth.loading && user === auth.user._id && (\n\t\t\t\t\t\t\t\t\t<button onClick={e => deletePost(_id)} type=\"button\" className=\"btn btn-danger\">\n\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-times\"></i>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Fragment>}\n\t\t\t\t\t\t\t</div>\n          \t</div>\n\t\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nPostItem.defaultProps = {\n\tshowActions: true\n}\n\nPostItem.propTypes = {\n\tpost: PropTypes.object.isRequired,\n\tauth: PropTypes.object.isRequired,\n\taddLike: PropTypes.func.isRequired,\n\tremoveLike: PropTypes.func.isRequired,\n\tdeletePost: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n\tauth: state.auth\n})\n\nexport default connect(mapStateToProps, {addLike, removeLike, deletePost})(PostItem)\n","import axios from 'axios'\nimport { setAlert } from './alert'\nimport { ADD_POST, DELETE_POST, GET_POSTS, GET_POST, POST_ERROR, UPDATE_LIKES, ADD_COMMENT, REMOVE_COMMENT } from './types'\n\n// Get posts\nexport const getPosts = () => async dispatch => {\n\ttry {\n\t\tconst res = await axios.get('/api/posts')\n\n\t\tdispatch({\n\t\t\ttype: GET_POSTS,\n\t\t\tpayload: res.data\n\t\t});\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: {msg: error.response.statusText, status: error.response.status}\n\t\t})\n\t}\n}\n\n// Get single post\nexport const getPost = id => async dispatch => {\n\ttry {\n\t\tconst res = await axios.get(`/api/posts/${id}`)\n\n\t\tdispatch({\n\t\t\ttype: GET_POST,\n\t\t\tpayload: res.data\n\t\t});\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: {msg: error.response.statusText, status: error.response.status}\n\t\t})\n\t}\n}\n\n// Add post\nexport const addPost = formData => async dispatch => {\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t}\n\t}\n\n\ttry {\n\t\tconst res =\tawait axios.post(`/api/posts`, formData, config)\n\n\t\tdispatch({\n\t\t\ttype: ADD_POST,\n\t\t\tpayload: res.data\n\t\t});\n\t\tdispatch(setAlert('Post Created', 'success'));\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: {msg: error.response.statusText, status: error.response.status}\n\t\t})\n\t}\n}\n\n// Delete Posts\nexport const deletePost = id => async dispatch => {\n\ttry {\n\t\tawait axios.delete(`/api/posts/${id}`)\n\n\t\tdispatch({\n\t\t\ttype: DELETE_POST,\n\t\t\tpayload: id\n\t\t});\n\t\tdispatch(setAlert('Post Removed', 'danger'))\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: {msg: error.response.statusText, status: error.response.status}\n\t\t})\n\t}\n}\n\n// Add Like\nexport const addLike = id => async dispatch => {\n\ttry {\n\t\tconst res = await axios.put(`/api/posts/like/${id}`)\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_LIKES,\n\t\t\tpayload: {\n\t\t\t\tid, likes: res.data\n\t\t\t}\n\t\t});\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: {msg: error.response.statusText, status: error.response.status}\n\t\t})\n\t}\n}\n\n// Remove Like\nexport const removeLike = id => async dispatch => {\n\ttry {\n\t\tconst res = await axios.put(`/api/posts/unlike/${id}`)\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_LIKES,\n\t\t\tpayload: {\n\t\t\t\tid, likes: res.data\n\t\t\t}\n\t\t});\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: {msg: error.response.statusText, status: error.response.status}\n\t\t})\n\t}\n}\n\n// Add Comment\nexport const addComment = (postId, formData) => async dispatch => {\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t}\n\t}\n\n\ttry {\n\t\tconst res =\tawait axios.post(`/api/posts/comment/${postId}`, formData, config)\n\n\t\tdispatch({\n\t\t\ttype: ADD_COMMENT,\n\t\t\tpayload: res.data\n\t\t});\n\t\tdispatch(setAlert('Comment posted', 'success'));\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: {msg: error.response.statusText, status: error.response.status}\n\t\t})\n\t}\n}\n\n// Remove Comment\nexport const removeComment = (postId, commentId) => async dispatch => {\n\ttry {\n\t\tconst res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`)\n\n\t\tdispatch({\n\t\t\ttype: REMOVE_COMMENT,\n\t\t\tpayload: commentId\n\t\t});\n\t\tdispatch(setAlert('Comment deleted', 'danger'))\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: {msg: error.response.statusText, status: error.response.status}\n\t\t})\n\t}\n}","import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { addPost } from '../../actions/post'\n\nconst PostForm = ({addPost}) => {\n\tconst [text, setText] = useState('')\n\n\treturn (\n\t\t<div className=\"post-form\">\n        <form \n         autoComplete='off'\n         onSubmit={e => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\taddPost({text});\n\t\t\t\t\tsetText('')}} \n         className=\"form my-1\">\n          <div className='post-bar'>\n            <input\n                className='post-bar-in'\n                name=\"text\"\n                cols=\"30\"\n                rows=\"5\"\n                value={text}\n                onChange={e => setText(e.target.value)}\n                placeholder=\"Create a post\"\n                required\n              />\n            <button type=\"submit\" className=\"post-bar-btn\" value=\"Submit\">\n              <i class=\"fas fa-share\"></i>\n            </button>\n          </div>\n        </form>\n      </div>\n\t)\n}\n\nPostForm.propTypes = {\n\taddPost: PropTypes.func.isRequired,\n}\n\nexport default connect(null, {addPost})(PostForm)\n","import React, {Fragment, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { getPosts } from '../../actions/post'\nimport { getCurrentProfile } from '../../actions/profile'\nimport {Spinner} from '../Layout/Spinner'\nimport PostItem from './PostItem'\nimport PostForm from './PostForm'\n\nconst Posts = ({getPosts, getCurrentProfile, profile: {profile}, auth: {isAuth}, post: {posts, loading}}) => {\n\tuseEffect(() => {\n\t\tgetPosts()\n\t\tgetCurrentProfile()\n\t}, [getPosts, getCurrentProfile])\n\n\tif (!isAuth) {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<h3>\n\t\t\t\t\tOnly users can view posts, please \n\t\t\t\t\t<Link to='/login'> login </Link> or\n\t\t\t\t\t<Link to='/register'> create an account </Link>\n\t\t\t\t\tto create & view posts\n\t\t\t\t</h3>\n\t\t\t</Fragment>\n\t\t)\n\t}\n\n\treturn loading ? <Spinner /> : (\n\t\t<Fragment>\n\t\t\t<h1 className='large text-primary'>Posts</h1>\n\t\t\t<p className='lead'>\n\t\t\t\t<i className='fas fa-user'></i>Welcome to the ___ community\n\t\t\t</p>\n\t\t\t{profile && <PostForm /> }\n\t\t\t{!profile && (\n\t\t\t\t<p>You have not finished creating your profile, please \n\t\t\t\t\t<Link to='/create-profile'> create one </Link>\n\t\t\t\t\tto join the discussion\n\t\t\t\t</p>\n\t\t\t)}\n\t\t\t<div className='posts'>\n\t\t\t\t{posts.map(post => (\n\t\t\t\t\t<PostItem key={post._id} post={post} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</Fragment>\n\t)\n}\n\nPosts.propTypes = {\n\tgetPosts: PropTypes.func.isRequired,\n\tgetCurrentProfile: PropTypes.func.isRequired,\n\tpost: PropTypes.object.isRequired,\n\tauth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n\tpost: state.post,\n\tauth: state.auth,\n\tprofile: state.profile\n})\n\nexport default connect(mapStateToProps, {getPosts, getCurrentProfile})(Posts)\n","import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { addComment } from '../../actions/post'\n\nconst CommentForm = ({postId, addComment}) => {\n\tconst [text, setText] = useState('')\n\treturn (\n\t\t<div className=\"post-form\"> \n         <div className=\"lg-line\"></div>\n        <form \n          autoComplete='off'\n          onSubmit={e => {\n            e.preventDefault();\n            addComment(postId, {text});\n            setText('')}} \n\t\t\t\t\tclassName=\"form my-1\">\n          <div className='post-bar'>\n            <input\n              className='post-bar-in'\n              name=\"text\"\n              cols=\"30\"\n              rows=\"5\"\n              value={text}\n              onChange={e => setText(e.target.value)}\n              placeholder=\"Reply\"\n              required\n            ></input>\n            <button type=\"submit\" className=\"post-bar-btn\" value=\"Reply\">\n              <i className=\"fas fa-reply\"></i>            \n            </button>\n          </div>\n        </form>\n      </div>\n\t)\n}\n\nCommentForm.propTypes = {\n\taddComment: PropTypes.func.isRequired,\n}\n\nexport default connect(null, {addComment})(CommentForm)\n","import React, {Fragment} from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Moment from 'react-moment'\nimport {removeComment} from '../../actions/post'\n\nconst CommentItem = ({\n\tauth,\n\tpostId, \n\tcomment: {_id, text, name, avatar, user, date},\n\tremoveComment\n}) => {\n\n\treturn (\n\t\t<div className=\"comment p-1 my-1\">\n\t\t\t<div className='col'>\n\t\t\t\t<Link to={`/profile/${user}`}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={avatar}\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t/>\n\t\t\t\t</Link>\n\t\t\t\t<h4>{name}</h4>\n\t\t\t</div>\n\t\t\t<div className='comment-text'>\n\t\t\t\t<p className=\"my-1\">\n\t\t\t\t\t{text}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className='comment-details'>\n\t\t\t\t{!auth.loading && user === auth.user._id && (\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={e => removeComment(postId, _id)} \n\t\t\t\t\t\ttype='button' \n\t\t\t\t\t\tclassName='small-btn btn-danger'>\n\t\t\t\t\t\t\t<i className='fas fa-times'></i>\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t\t<small className=\"post-date\">\n\t\t\t\t\tPosted on <Moment format='MM/DD/YYYY'>{date}</Moment>\n\t\t\t\t</small>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nCommentItem.propTypes = {\n\tremoveComment: PropTypes.func.isRequired,\n\tpostId: PropTypes.number.isRequired,\n\tcomment: PropTypes.object.isRequired,\n\tauth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n\tauth: state.auth,\n})\n\nexport default connect(mapStateToProps, {removeComment})(CommentItem)\n","import React, {Fragment, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getPost } from '../../actions/post'\nimport { Spinner } from '../Layout/Spinner'\nimport PostItem from '../posts/PostItem'\nimport CommentForm from './CommentForm'\nimport CommentItem from './CommentItem'\n\nconst Post = ({getPost, post:{post, loading}, match}) => {\n\n\tuseEffect(() => {\n\t\tgetPost(match.params.id)\n\t}, [getPost, match.params.id])\n\n\treturn loading || post === null ? <Spinner /> :\n\t\t<Fragment>\n\t\t\t<Link to='/posts' className='btn btn-primary'>\n\t\t\t\tBack To Posts\n\t\t\t</Link>\n\t\t\t<PostItem \n\t\t\t\tpost={post}\n\t\t\t\tshowActions={false}\n\t\t\t/>\n\t\t\t<CommentForm postId={post._id} />\n\t\t\t<div className='comments'>\n\t\t\t\t{post.comments.map(comment => (\n\t\t\t\t<div className='comment-container'>\n\t\t\t\t\t<i className=\"fas fa-flip-horizontal fa-comment\" style={{fontSize: '5vw'}}></i>\n\t\t\t\t\t<CommentItem key={comment._id} comment={comment} postId={post._id} />\n\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</Fragment>\n}\n\nPost.propTypes = {\n\tgetPost: PropTypes.func.isRequired,\n\tpost: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n\tpost: state.post\n})\n\nexport default connect(mapStateToProps, {getPost})(Post)\n","import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({ component: Component, auth: { isAuth, loading }, ...rest }) => (\n   <Route {...rest} render={props => !isAuth && !loading ?\n      (<Redirect to=\"/login\" />) : (<Component {...props} />)} />\n);\n\nPrivateRoute.propTypes = {\n   auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n   auth: state.auth\n})\n\nexport default connect(mapStateToProps)(PrivateRoute)\n","// Importing alerts \nimport { SET_ALERT, REMOVE_ALERT } from '../actions/types';\nconst initialState = [];\n\nfunction alertsReducer( state = initialState, action ) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case SET_ALERT:\n            return [...state, payload];\n        case REMOVE_ALERT:\n            return state.filter( alert => alert.id !== payload );\n        default:\n            return state; \n    }\n};\n\nexport default alertsReducer;","import { REGISTER_SUCCESS, REGISTER_FAIL , USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, DELETE_ACCOUNT} from \"../actions/types\";\n\nconst initialState = {\n    token: localStorage.getItem( 'token' ),\n    isAuth: null,\n    loading: true,\n    user: null\n}\n\nfunction authReducer ( state = initialState, action ) {\n    const {type, payload} = action\n\n    switch (type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuth: true,\n                loading: false,\n                user: payload\n            }\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.token);\n            return {\n                ...state,\n                ...payload,\n                isAuth: true,\n                loading: false\n            }\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n        case DELETE_ACCOUNT:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isAuth: false,\n                loading: false        \n            }\n        default:\n            return state\n    }\n}\n\nexport default authReducer;","import { CLEAR_PROFILE, GET_PROFILE, GET_PROFILES, PROFILE_ERROR } from \"../actions/types\";\n\nconst initialState = {\n   profile: null,\n   profiles: [],\n   loading: true,\n   error: {}\n}\n\nfunction profileReducer (state = initialState, action) {\n   const { type, payload } = action;\n\n   switch (type) {\n      case GET_PROFILE:\n         return {\n            ...state,\n            profile: payload,\n            loading: false\n         }\n      case GET_PROFILES:\n         return {\n            ...state,\n            profiles: payload,\n            loading: false\n         }\n      case PROFILE_ERROR:\n         return {\n            ...state,\n            error: payload,\n            loading: false,\n            profile: null\n         }\n      case CLEAR_PROFILE:\n         return {\n            ...state,\n            profile: null,\n            loading: false\n         }\n      default:\n         return state;\n   }\n}\n\nexport default profileReducer;","import {ADD_COMMENT, ADD_POST, DELETE_POST, GET_POST, GET_POSTS, POST_ERROR, REMOVE_COMMENT, UPDATE_LIKES} from '../actions/types'\n\nconst initialState = {\n\tposts: [],\n\tpost: null,\n\tloading: true,\n\terror: {}\n}\n\nfunction postReducer(state = initialState, action) {\n\tconst {type, payload} = action\n\n\tswitch(type) {\n\t\tcase GET_POSTS:\n\t\t\treturn {\n\t\t\t\t...state, \n\t\t\t\tposts: payload,\n\t\t\t\tloading: false\n\t\t\t}\n\t\tcase GET_POST:\n\t\t\treturn { \n\t\t\t\t...state,\n\t\t\t\tpost: payload,\n\t\t\t\tloading: false\n\t\t\t}\n\t\tcase ADD_POST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: [payload, ...state.posts],\n\t\t\t\tloading: false\n\t\t\t}\n\t\tcase DELETE_POST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: state.posts.filter(post => post._id !== payload),\n\t\t\t\tloading: false\n\t\t\t}\n\t\tcase POST_ERROR:\n\t\t\treturn {\n\t\t\t\t...state, \n\t\t\t\terror: payload,\n\t\t\t\tloading: false\n\t\t\t}\n\t\tcase UPDATE_LIKES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: state.posts.map(post => post._id === payload.id ? {...post, likes: payload.likes} : post ),\n\t\t\t\tloading: false\n\t\t\t}\n\t\tcase ADD_COMMENT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpost: {...state.post, comments: payload},\n\t\t\t\tloading: false\n\t\t\t}\n\t\tcase REMOVE_COMMENT:\n\t\t\treturn {\n\t\t\t\t...state, \n\t\t\t\tpost: {\n\t\t\t\t\t...state.post,\n\t\t\t\t\tcomments: state.post.comments.filter(comment => comment._id !== payload)\n\t\t\t\t},\n\t\t\t\tloading: false\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default postReducer","import { combineReducers } from \"redux\";\nimport alert from './alert';\nimport auth from \"./auth\";\nimport profile from './profile'\nimport post from './post'\n// Because this file is named index we can simply import this file into the store which combines all reducers from the reducers folder\n\nexport default combineReducers( {\n    alert,\n    auth,\n    profile,\n    post\n} );","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n// Imports combineReducer from index which holds all reducers in reducers folder\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore( rootReducer, initialState, composeWithDevTools( applyMiddleware( ...middleware ) ) );\n\nexport default store; ","import './App.css';\nimport React, {useEffect, Fragment} from 'react'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Navbar from './Components/Layout/Navbar';\nimport Landing from './Components/Layout/Landing';\nimport Login from './Components/Auth/Login';\nimport Register from './Components/Auth/Register';\nimport Alert from './Components/Layout/Alert';\nimport Dashboard from './Components/dashboard/Dashboard';\nimport CreateProfile from './Components/profile-forms/CreateProfile';\nimport EditProfile from './Components/profile-forms/EditProfile';\nimport Profiles from './Components/profiles/Profiles';\nimport Profile from './Components/profile/Profile';\nimport Posts from './Components/posts/Posts';\nimport Post from './Components/post/Post';\nimport PrivateRoute from './Components/routing/PrivateRoute';\nimport { loadUser } from './actions/auth';\nimport { setAuthToken } from './utils/setAuthToken';\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store'\n\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token)\n}\n \nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, [])\n  \n  return (\n  <Provider store={store}>\n    <Router>\n      <Fragment>  \n        <Navbar />\n        <Route exact path=\"/\" component={Landing} />\n        <section className='container'>\n          <Alert />\n          <Switch>\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/profiles\" component={Profiles} />\n            <Route exact path=\"/profile/:id\" component={Profile} />\n            <Route exact path=\"/posts\" component={Posts} />\n            <Route exact path=\"/posts/:id\" component={Post} />\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            <PrivateRoute exact path=\"/create-profile\" component={CreateProfile} />\n            <PrivateRoute exact path=\"/edit-profile\" component={EditProfile} />\n          </Switch>\n        </section>\n      </Fragment>\n    </Router>\n  </Provider>\n)}\n    \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}